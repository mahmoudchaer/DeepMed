version: '3'

services:
  # Data Cleaner service
  data-cleaner:
    image: mahmoudchaer/data-cleaner:latest
    build:
      context: ./data_cleaner
      dockerfile: Dockerfile
    ports:
      - "5001:5001"
    environment:
      - PORT=5001
      - OPENAI-API-KEY=${OPENAIAPIKEY}
    volumes:
      - ./logs:/app/logs
      - ../keyvault.py:/app/keyvault.py
      - ./docker_secrets.py:/app/docker_secrets.py
    networks:
      - deepmed-network

  # Feature Selector service
  feature-selector:
    image: mahmoudchaer/feature-selector:latest
    build:
      context: ./feature_selector
      dockerfile: Dockerfile
    ports:
      - "5002:5002"
    environment:
      - PORT=5002
      - OPENAI-API-KEY=${OPENAIAPIKEY}
    volumes:
      - ./logs:/app/logs
      - ../keyvault.py:/app/keyvault.py
      - ./docker_secrets.py:/app/docker_secrets.py
    networks:
      - deepmed-network

  # Anomaly Detector service
  anomaly-detector:
    image: mahmoudchaer/anomaly-detector:latest
    build:
      context: ./anomaly_detector
      dockerfile: Dockerfile
    ports:
      - "5003:5003"
    volumes:
      - ./logs:/app/logs
      - ../keyvault.py:/app/keyvault.py
      - ./docker_secrets.py:/app/docker_secrets.py
    networks:
      - deepmed-network

  # Model Trainer service
  model-trainer:
    image: mahmoudchaer/model-trainer:latest
    build:
      context: ./model_trainer
      dockerfile: Dockerfile
    ports:
      - "5004:5004"
    volumes:
      - ./logs:/app/logs
      - ./saved_models:/app/saved_models
      - ./mlruns:/app/mlruns
      - ../keyvault.py:/app/keyvault.py
      - ./docker_secrets.py:/app/docker_secrets.py
    networks:
      - deepmed-network

  # Medical Assistant service
  medical-assistant:
    image: mahmoudchaer/medical-assistant:latest
    build:
      context: ./medical_assistant
      dockerfile: Dockerfile
    ports:
      - "5005:5005"
    environment:
      - PORT=5005
      - OPENAI-API-KEY=${OPENAIAPIKEY}
    volumes:
      - ./logs:/app/logs
      - ../keyvault.py:/app/keyvault.py
      - ./docker_secrets.py:/app/docker_secrets.py
    networks:
      - deepmed-network

  # Model Coordinator
  model_coordinator:
    image: mahmoudchaer/model-coordinator:latest
    build:
      context: ./model_coordinator
      dockerfile: Dockerfile
    container_name: model_coordinator
    ports:
      - "5020:5020"
    environment:
      - PORT=5020
      - IS_DOCKER=true
      - LOGISTIC_REGRESSION_URL=http://logistic_regression:5010
      - DECISION_TREE_URL=http://decision_tree:5011
      - RANDOM_FOREST_URL=http://random_forest:5012
      - SVM_URL=http://svm:5013
      - KNN_URL=http://knn:5014
      - NAIVE_BAYES_URL=http://naive_bayes:5015
      - MLFLOW_TRACKING_URI=file:///app/mlruns
      - OPENAI-API-KEY=${OPENAIAPIKEY}
      - AZURESTORAGEACCOUNT=${AZURE_STORAGE_ACCOUNT}
      - AZURESTORAGEKEY=${AZURE_STORAGE_KEY}
      - AZURECONTAINER=${AZURE_CONTAINER}
    volumes:
      - ./logs:/app/logs
      - ./mlruns:/app/mlruns
      - ../keyvault.py:/app/keyvault.py
      - ./docker_secrets.py:/app/docker_secrets.py
    networks:
      - deepmed-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: on-failure

  # Individual model services
  logistic_regression:
    image: mahmoudchaer/logistic-regression:latest
    build:
      context: ./logistic_regression
      dockerfile: Dockerfile
    ports:
      - "5010:5010"
    environment:
      - MLFLOW_TRACKING_URI=file:///app/mlruns
    volumes:
      - ./logs:/app/logs
      - ./saved_models:/app/saved_models
      - ./mlruns:/app/mlruns
      - ../keyvault.py:/app/keyvault.py
      - ./docker_secrets.py:/app/docker_secrets.py
    networks:
      - deepmed-network

  decision_tree:
    image: mahmoudchaer/decision-tree:latest
    build:
      context: ./decision_tree
      dockerfile: Dockerfile
    ports:
      - "5011:5011"
    environment:
      - MLFLOW_TRACKING_URI=file:///app/mlruns
    volumes:
      - ./logs:/app/logs
      - ./saved_models:/app/saved_models
      - ./mlruns:/app/mlruns
      - ../keyvault.py:/app/keyvault.py
      - ./docker_secrets.py:/app/docker_secrets.py
    networks:
      - deepmed-network

  random_forest:
    image: mahmoudchaer/random-forest:latest
    build:
      context: ./random_forest
      dockerfile: Dockerfile
    ports:
      - "5012:5012"
    environment:
      - MLFLOW_TRACKING_URI=file:///app/mlruns
    volumes:
      - ./logs:/app/logs
      - ./saved_models:/app/saved_models
      - ./mlruns:/app/mlruns
      - ../keyvault.py:/app/keyvault.py
      - ./docker_secrets.py:/app/docker_secrets.py
    networks:
      - deepmed-network

  svm:
    image: mahmoudchaer/svm:latest
    build:
      context: ./svm
      dockerfile: Dockerfile
    ports:
      - "5013:5013"
    environment:
      - MLFLOW_TRACKING_URI=file:///app/mlruns
    volumes:
      - ./logs:/app/logs
      - ./saved_models:/app/saved_models
      - ./mlruns:/app/mlruns
      - ../keyvault.py:/app/keyvault.py
      - ./docker_secrets.py:/app/docker_secrets.py
    networks:
      - deepmed-network

  knn:
    image: mahmoudchaer/knn:latest
    build:
      context: ./knn
      dockerfile: Dockerfile
    ports:
      - "5014:5014"
    environment:
      - MLFLOW_TRACKING_URI=file:///app/mlruns
    volumes:
      - ./logs:/app/logs
      - ./saved_models:/app/saved_models
      - ./mlruns:/app/mlruns
      - ../keyvault.py:/app/keyvault.py
      - ./docker_secrets.py:/app/docker_secrets.py
    networks:
      - deepmed-network

  naive_bayes:
    image: mahmoudchaer/naive-bayes:latest
    build:
      context: ./naive_bayes
      dockerfile: Dockerfile
    ports:
      - "5015:5015"
    environment:
      - MLFLOW_TRACKING_URI=file:///app/mlruns
    volumes:
      - ./logs:/app/logs
      - ./saved_models:/app/saved_models
      - ./mlruns:/app/mlruns
      - ../keyvault.py:/app/keyvault.py
      - ./docker_secrets.py:/app/docker_secrets.py
    networks:
      - deepmed-network

  tabular-predictor-service:
    image: mahmoudchaer/tabular-predictor-service:latest
    build:
      context: ../docker_versions/predictor
      dockerfile: Dockerfile
    ports:
      - "5101:5101"
    restart: unless-stopped
    volumes:
      - ../docker_versions/predictor/predictor.py:/app/predictor.py
      - ../keyvault.py:/app/keyvault.py
      - ./docker_secrets.py:/app/docker_secrets.py
    environment:
      - PORT=5101
    networks:
      - deepmed-network

  model-training-service:
    image: mahmoudchaer/model-training-service:latest
    build:
      context: ../docker_for_images/images_classification
      dockerfile: Dockerfile
    ports:
      - "5021:5021"
    restart: unless-stopped
    volumes:
      - ../docker_for_images/images_classification/app.py:/app/app.py
      - ../keyvault.py:/app/keyvault.py
      - ./docker_secrets.py:/app/docker_secrets.py
    environment:
      - PORT=5021
    networks:
      - deepmed-network

  augmentation-service:
    image: mahmoudchaer/augmentation-service:latest
    build:
      context: ../docker_for_images/data_augmentation
      dockerfile: Dockerfile
    ports:
      - "5023:5023"
    restart: unless-stopped
    volumes:
      - ../docker_for_images/data_augmentation/data_augmentation.py:/app/data_augmentation.py
      - ../docker_for_images/data_augmentation/augment_service.py:/app/augment_service.py
      - ../keyvault.py:/app/keyvault.py
      - ./docker_secrets.py:/app/docker_secrets.py
    environment:
      - PORT=5023
    networks:
      - deepmed-network

  pipeline-service:
    image: mahmoudchaer/pipeline-service:latest
    build:
      context: ../docker_for_images/pipeline
      dockerfile: Dockerfile
    ports:
      - "5025:5025"
    restart: unless-stopped
    volumes:
      - ../docker_for_images/pipeline/app.py:/app/app.py
      - ../keyvault.py:/app/keyvault.py
      - ./docker_secrets.py:/app/docker_secrets.py
    environment:
      - PORT=5025
      - AUGMENTATION_SERVICE_URL=http://augmentation-service:5023
      - MODEL_TRAINING_SERVICE_URL=http://model-training-service:5021
    networks:
      - deepmed-network
    depends_on:
      - augmentation-service
      - model-training-service

  anomaly-detection-service:
    image: mahmoudchaer/anomaly-detection-service:latest
    build:
      context: ../docker_for_images/anomaly_detector
      dockerfile: Dockerfile
    ports:
      - "5029:5029"
    restart: unless-stopped
    volumes:
      - ../docker_for_images/anomaly_detector/anomaly_detection_service.py:/app/anomaly_detection_service.py
      - ../keyvault.py:/app/keyvault.py
      - ./docker_secrets.py:/app/docker_secrets.py
    shm_size: '4gb'
    environment:
      - PORT=5029
    networks:
      - deepmed-network

  anomaly-detector-eep:
    image: mahmoudchaer/anomaly-detector-eep:latest
    build:
      context: ../docker_for_images/eep_anomaly_detector
      dockerfile: Dockerfile_eep
    ports:
      - "5030:5030"
    restart: unless-stopped
    volumes:
      - ../docker_for_images/eep_anomaly_detector/anomaly_detector_eep.py:/app/anomaly_detector_eep.py
      - ../keyvault.py:/app/keyvault.py
      - ./docker_secrets.py:/app/docker_secrets.py
    environment:
      - PORT=5030
      - ANOMALY_DETECTION_SERVICE_URL=http://anomaly-detection-service:5029
    networks:
      - deepmed-network
    depends_on:
      - anomaly-detection-service

  predictor-service:
    image: mahmoudchaer/predictor-service:latest
    build:
      context: ../docker_for_images/predictor
      dockerfile: Dockerfile
    ports:
      - "5100:5100"
    restart: unless-stopped
    volumes:
      - ../docker_for_images/predictor/predictor.py:/app/predictor.py
      - ../keyvault.py:/app/keyvault.py
      - ./docker_secrets.py:/app/docker_secrets.py
    environment:
      - PORT=5100
    networks:
      - deepmed-network

  embedding_service:
    image: mahmoudchaer/embedding-service:latest
    build:
      context: ../chatbot/embedding_service
      dockerfile: Dockerfile
    ports:
      - "5201:5201"
    environment:
      - PORT=5201
      - OPENAI-API-KEY=${OPENAIAPIKEY}
    volumes:
      - ../logs:/app/logs
      - ../keyvault.py:/app/keyvault.py
      - ./docker_secrets.py:/app/docker_secrets.py
    networks:
      - deepmed-network

  vector_search_service:
    image: mahmoudchaer/vector-search-service:latest
    build:
      context: ../chatbot/vector_search_service
      dockerfile: Dockerfile
    ports:
      - "5202:5202"
    environment:
      - PORT=5202
      - OPENAI-API-KEY=${OPENAIAPIKEY}
    volumes:
      - ../keyvault.py:/app/keyvault.py
      - ./docker_secrets.py:/app/docker_secrets.py
    networks:
      - deepmed-network

  llm_generator_service:
    image: mahmoudchaer/llm-generator-service:latest
    build:
      context: ../chatbot/llm_generator_service
      dockerfile: Dockerfile
    ports:
      - "5203:5203"
    environment:
      - PORT=5203
      - OPENAI-API-KEY=${OPENAIAPIKEY}
    volumes:
      - ../logs:/app/logs
      - ../keyvault.py:/app/keyvault.py
      - ./docker_secrets.py:/app/docker_secrets.py
    networks:
      - deepmed-network

  chatbot_gateway:
    image: mahmoudchaer/chatbot-gateway:latest
    build:
      context: ../chatbot/chatbot_gateway
      dockerfile: Dockerfile
    ports:
      - "5204:5204"
    environment:
      - EMBEDDING_URL=http://embedding_service:5201
      - VECTOR_URL=http://vector_search_service:5202
      - LLM_URL=http://llm_generator_service:5203
      - OPENAI-API-KEY=${OPENAIAPIKEY}
    volumes:
      - ../logs:/app/logs
      - ../keyvault.py:/app/keyvault.py
      - ./docker_secrets.py:/app/docker_secrets.py
    networks:
      - deepmed-network

  # Monitoring Services
  monitoring:
    image: mahmoudchaer/monitoring:latest
    build:
      context: ../monitoring
      dockerfile: Dockerfile
    container_name: monitoring
    ports:
      - "5432:5432"
    volumes:
      - ../monitoring:/app
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - PORT=5432
    networks:
      - deepmed-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:v2.30.3
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ../monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - deepmed-network
    restart: unless-stopped
    depends_on:
      - monitoring

  grafana:
    image: grafana/grafana:8.2.2
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ../monitoring/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=deepmed
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - deepmed-network
    restart: unless-stopped
    depends_on:
      - prometheus

networks:
  deepmed-network:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data:
