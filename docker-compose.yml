version: '3'

services:
  augmentation-service:
    build:
      context: ./docker_for_images/data_augmentation
      dockerfile: Dockerfile
    ports:
      - "5023:5023"
    restart: unless-stopped
    volumes:
      - ./docker_for_images/data_augmentation/data_augmentation.py:/app/data_augmentation.py
      - ./docker_for_images/data_augmentation/augment_service.py:/app/augment_service.py
    environment:
      - PORT=5023
    networks:
      - deepmed-network

  pipeline-service:
    build:
      context: ./docker_for_images/pipeline
      dockerfile: Dockerfile
    ports:
      - "5025:5025"
    restart: unless-stopped
    volumes:
      - ./docker_for_images/pipeline/app.py:/app/app.py
    environment:
      - PORT=5025
      - AUGMENTATION_SERVICE_URL=http://augmentation-service:5023
      - MODEL_TRAINING_SERVICE_URL=http://model-training-service:5021
    networks:
      - deepmed-network
    depends_on:
      - augmentation-service
      - model-training-service

  anomaly-detector-eep:
    build:
      context: ./docker_for_images/eep_anomaly_detector
      dockerfile: Dockerfile_eep
    ports:
      - "5030:5030"
    restart: unless-stopped
    volumes:
      - ./docker_for_images/eep_anomaly_detector/anomaly_detector_eep.py:/app/anomaly_detector_eep.py
    environment:
      - PORT=5030
      - ANOMALY_DETECTION_SERVICE_URL=http://anomaly-detection-service:5029
    networks:
      - deepmed-network
    depends_on:
      - anomaly-detection-service

  anomaly-detection-service:
    build:
      context: ./docker_for_images/anomaly_detector
      dockerfile: Dockerfile
    ports:
      - "5029:5029"
    restart: unless-stopped
    volumes:
      - ./docker_for_images/anomaly_detector/anomaly_detection_service.py:/app/anomaly_detection_service.py
    shm_size: '4gb'
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4G
        reservations:
          memory: 2G
    environment:
      - PORT=5029
    networks:
      - deepmed-network

  predictor-service:
    build:
      context: ./docker_for_images/predictor
      dockerfile: Dockerfile
    ports:
      - "5100:5100"
    restart: unless-stopped
    volumes:
      - ./docker_for_images/predictor/predictor.py:/app/predictor.py
    environment:
      - PORT=5100
    networks:
      - deepmed-network

  monitoring:
    build: ./monitoring
    ports:
      - "5432:5432"
    volumes:
      - ./monitoring:/app
      - ./monitoring/logs:/app/logs
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    environment:
      - FLASK_ENV=production
      - DATA_CLEANER_URL=http://host.docker.internal:5001
      - FEATURE_SELECTOR_URL=http://host.docker.internal:5002
      - ANOMALY_DETECTOR_URL=http://host.docker.internal:5003
      - MODEL_COORDINATOR_URL=http://host.docker.internal:5020
      - MODEL_TRAINING_SERVICE_URL=http://host.docker.internal:5021
      - LOGISTIC_REGRESSION_URL=http://host.docker.internal:5010
      - DECISION_TREE_URL=http://host.docker.internal:5011
      - RANDOM_FOREST_URL=http://host.docker.internal:5012
      - SVM_URL=http://host.docker.internal:5013
      - KNN_URL=http://host.docker.internal:5014
      - NAIVE_BAYES_URL=http://host.docker.internal:5015
      - MEDICAL_ASSISTANT_URL=http://host.docker.internal:5005
      - PIPELINE_SERVICE_URL=http://host.docker.internal:5025
      - AUGMENTATION_SERVICE_URL=http://host.docker.internal:5023
      - ANOMALY_DETECTION_SERVICE_URL=http://host.docker.internal:5029
      - TABULAR_PREDICTOR_URL=http://host.docker.internal:5100
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - deepmed-network

  prometheus:
    build: ./monitoring/prometheus
    ports:
      - "9090:9090"
    volumes:
      - prometheus_data:/prometheus
    restart: always
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - deepmed-network

  grafana:
    build: ./monitoring/grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=deepmed
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: always
    depends_on:
      - prometheus
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - deepmed-network

volumes:
  prometheus_data:
  grafana_data:

networks:
  deepmed-network:
    driver: bridge
