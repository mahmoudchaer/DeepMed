name: Pull and Run Docker Images

on:
  workflow_run:
    workflows: ["Test Environment Setup"]
    types:
      - completed
    branches:
      - main

jobs:
  pull-and-run-docker-images:
    name: Pull and Run Docker Images
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: SSH into VM
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.TEST_SSH_PRIVATE_KEY }}
      
      - name: Add server to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.TEST_SERVER_IP }} >> ~/.ssh/known_hosts
      
      - name: Install Docker Compose if needed
        run: |
          # Check if Docker Compose is installed
          ssh azureuser@${{ secrets.TEST_SERVER_IP }} "
            if ! command -v docker-compose &> /dev/null; then
              echo 'Docker Compose not found, installing...'
              sudo curl -L \"https://github.com/docker/compose/releases/download/v2.24.1/docker-compose-\$(uname -s)-\$(uname -m)\" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
              docker-compose --version
            else
              echo 'Docker Compose is already installed'
              docker-compose --version
            fi
          "
      
      - name: Pull Latest Images
        run: |
          # Login to Docker Hub on VM
          ssh azureuser@${{ secrets.TEST_SERVER_IP }} "echo '${{ secrets.DOCKERHUB_TOKEN }}' | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin"
          
          # Create directories and copy docker-compose.yml
          ssh azureuser@${{ secrets.TEST_SERVER_IP }} "mkdir -p ~/DeepMed/docker_versions"
          scp docker_versions/docker-compose.yml azureuser@${{ secrets.TEST_SERVER_IP }}:~/DeepMed/docker_versions/
          
          # Pull all images using docker-compose
          ssh azureuser@${{ secrets.TEST_SERVER_IP }} "cd ~/DeepMed/docker_versions && sudo /usr/local/bin/docker-compose pull"
      
      - name: Run Each Image Individually
        run: |
          # Create a script to run each service individually
          ssh azureuser@${{ secrets.TEST_SERVER_IP }} "cat > ~/run_containers.sh << 'EOF'
          #!/bin/bash
          
          # Create a network for the containers
          docker network create deepmed-test-network || true
          
          # Function to run a container
          run_container() {
            local service_name=\$1
            local port=\$2
            local image=\"mahmoudchaer/\${service_name}:latest\"
            
            echo \"Starting \$service_name on port \$port using \$image\"
            
            # Stop and remove if already exists
            docker stop \$service_name 2>/dev/null || true
            docker rm \$service_name 2>/dev/null || true
            
            # Run the container
            docker run -d --name \$service_name \
              -p \$port:\$port \
              --network deepmed-test-network \
              \$image
              
            # Check if container is running
            if docker ps | grep \$service_name > /dev/null; then
              echo \"✅ \$service_name is running\"
            else
              echo \"❌ \$service_name failed to start\"
              docker logs \$service_name
            fi
          }
          
          # Run Tabular Data Services
          echo \"=== Starting Tabular Data Services ===\"
          run_container data-cleaner 5001
          run_container feature-selector 5002
          run_container anomaly-detector 5003
          run_container model-trainer 5004
          run_container medical-assistant 5005
          run_container model-coordinator 5020
          run_container logistic-regression 5010
          run_container decision-tree 5011
          run_container random-forest 5012
          run_container svm 5013
          run_container knn 5014
          run_container naive-bayes 5015
          run_container tabular-predictor-service 5101
          
          # Run Image Processing Services
          echo \"=== Starting Image Processing Services ===\"
          run_container pipeline-service 5025
          run_container augmentation-service 5023
          run_container model-training-service 5021
          run_container anomaly-detection-service 5029
          run_container anomaly-detector-eep 5030
          run_container predictor-service 5100
          
          # Run Chatbot Services
          echo \"=== Starting Chatbot Services ===\"
          run_container embedding-service 5201
          run_container vector-search-service 5202
          run_container llm-generator-service 5203
          run_container chatbot-gateway 5204
          
          echo \"All containers started individually\"
          docker ps
          EOF"
          
          # Make the script executable and run it
          ssh azureuser@${{ secrets.TEST_SERVER_IP }} "chmod +x ~/run_containers.sh && ~/run_containers.sh" 