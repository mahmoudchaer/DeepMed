name: Prepare Production Environment

on:
  workflow_run:
    workflows: ["Docker Services Health Check"]
    types:
      - completed
    branches:
      - main

jobs:
  prepare-production:
    name: Prepare Production Environment
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
    
      - name: Free up disk space
        run: |
          echo "Disk space before cleanup:"
          df -h
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache
          echo "Disk space after cleanup:"
          df -h
    
      - name: Setup SSH and add to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts
      
      - name: Setup SSH connection
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_K }}
      
      - name: Verify SSH connection
        run: |
          ssh -o StrictHostKeyChecking=accept-new azureuser@${{ secrets.SERVER_IP }} "echo 'SSH connection to production successful'"
      
      - name: Install Docker Compose if needed
        run: |
          # Check if Docker Compose is installed
          ssh azureuser@${{ secrets.SERVER_IP }} "
            if ! command -v docker-compose &> /dev/null; then
              echo 'Docker Compose not found, installing...'
              sudo curl -L \"https://github.com/docker/compose/releases/download/v2.24.1/docker-compose-\$(uname -s)-\$(uname -m)\" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
              docker-compose --version
            else
              echo 'Docker Compose is already installed'
              docker-compose --version
            fi
          "
      
      - name: Pull Docker Images
        run: |
          # Log in to Docker Hub on Production VM
          ssh azureuser@${{ secrets.SERVER_IP }} "echo '${{ secrets.DOCKERHUB_TOKEN }}' | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin"
          
          # Create directories and copy docker-compose.yml if needed
          ssh azureuser@${{ secrets.SERVER_IP }} "mkdir -p ~/DeepMed/docker_versions"
          scp docker_versions/docker-compose.yml azureuser@${{ secrets.SERVER_IP }}:~/DeepMed/docker_versions/
          
          # Pull all latest images using docker-compose
          ssh azureuser@${{ secrets.SERVER_IP }} "cd ~/DeepMed/docker_versions && sudo /usr/local/bin/docker-compose pull"
          
          echo "âœ… All images pulled successfully on production server"
          echo "Images are ready for deployment - no containers restarted yet"