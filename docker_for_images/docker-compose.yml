version: '3'

services:
  model-training-service:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5021:5021"
    restart: unless-stopped
    volumes:
      - ./model_service.py:/app/model_service.py
    environment:
      - PORT=5021
    networks:
      - deepmed-network

  augmentation-service:
    build:
      context: .
      dockerfile: Dockerfile_augment
    ports:
      - "5023:5023"
    restart: unless-stopped
    volumes:
      - ./data_augmentation.py:/app/data_augmentation.py
      - ./augment_service.py:/app/augment_service.py
    environment:
      - PORT=5023
    networks:
      - deepmed-network
      
  pipeline-service:
    build:
      context: .
      dockerfile: Dockerfile_pipeline
    ports:
      - "5025:5025"
    restart: unless-stopped
    volumes:
      - ./pipeline_service.py:/app/pipeline_service.py
    environment:
      - PORT=5025
      - AUGMENTATION_SERVICE_URL=http://augmentation-service:5023
      - MODEL_TRAINING_SERVICE_URL=http://model-training-service:5021
    networks:
      - deepmed-network
    depends_on:
      - augmentation-service
      - model-training-service
      
  object-detection-service:
    build:
      context: .
      dockerfile: Dockerfile_object_detection
    ports:
      - "5027:5027"
    restart: unless-stopped
    volumes:
      - ./:/app/service
    shm_size: '4gb'
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4G
        reservations:
          memory: 2G
    environment:
      - PORT=5027
    networks:
      - deepmed-network
      
  anomaly-detection-service:
    build:
      context: .
      dockerfile: Dockerfile_anomaly_detection
    ports:
      - "5029:5029"
    restart: unless-stopped
    volumes:
      - ./anomaly_detection_service.py:/app/anomaly_detection_service.py
    shm_size: '4gb'
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4G
        reservations:
          memory: 2G
    environment:
      - PORT=5029
    networks:
      - deepmed-network

networks:
  deepmed-network:
    driver: bridge 