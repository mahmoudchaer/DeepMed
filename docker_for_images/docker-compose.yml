version: '3'

services:
  # End-to-End Process (EEP)
  image-eep-service:
    build:
      context: .
      dockerfile: eep.Dockerfile
    ports:
      - "5000:5000"
    restart: unless-stopped
    volumes:
      - ./image_eep.py:/app/image_eep.py
    environment:
      - PORT=5000
    networks:
      - deepmed-network
    depends_on:
      - model-training-service
      - data-augmentation-service
      - data-processing-service

  # Existing Model Training Service (IEP)
  model-training-service:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5010:5010"
    restart: unless-stopped
    volumes:
      - ./model_service.py:/app/model_service.py
    environment:
      - PORT=5010
    networks:
      - deepmed-network

  # Data Augmentation Service (IEP)
  data-augmentation-service:
    build:
      context: .
      dockerfile: augmentation.Dockerfile
    ports:
      - "5011:5011"
    restart: unless-stopped
    volumes:
      - ./data_augmentation_service.py:/app/data_augmentation_service.py
    environment:
      - PORT=5011
    networks:
      - deepmed-network

  # Data Processing Service (IEP)
  data-processing-service:
    build:
      context: .
      dockerfile: processing.Dockerfile
    ports:
      - "5012:5012"
    restart: unless-stopped
    volumes:
      - ./data_processing_service.py:/app/data_processing_service.py
    environment:
      - PORT=5012
    networks:
      - deepmed-network

networks:
  deepmed-network:
    driver: bridge 